USE OnlineBookstore;

-- 1. SELECT all columns from Books
SELECT * FROM Books;
/* 
+---------+----------------+--------+-------+-----------+
| book_id | title          | price  | stock | author_id |
+---------+----------------+--------+-------+-----------+
|    1    | 1984           | 299.99 |  10   |     1     |
|    2    | Animal Farm    | 199.50 |  15   |     1     |
|    3    | Harry Potter   | 499.00 |   8   |     2     |
|    4    | Mystery Book   | 150.00 |   5   |     3     |
|    5    | Copy of 1984   | 299.99 |  10   |     1     |
+---------+----------------+--------+-------+-----------+
*/

-- 2. SELECT specific columns: title and price from Books
SELECT title, price FROM Books;
/*
+----------------+--------+
| title          | price  |
+----------------+--------+
| 1984           | 299.99 |
| Animal Farm    | 199.50 |
| Harry Potter   | 499.00 |
| Mystery Book   | 150.00 |
| Copy of 1984   | 299.99 |
+----------------+--------+
*/

-- 3. SELECT books with price greater than 300
SELECT title, price FROM Books WHERE price > 300;
/*
+--------------+--------+
| title        | price  |
+--------------+--------+
| Harry Potter | 499.00 |
+--------------+--------+
*/

-- 4. SELECT books with price BETWEEN 200 AND 500
SELECT title, price FROM Books WHERE price BETWEEN 200 AND 500;
/*
+--------------+--------+
| title        | price  |
+--------------+--------+
| 1984         | 299.99 |
| Harry Potter | 499.00 |
| Copy of 1984 | 299.99 |
+--------------+--------+
*/

-- 5. SELECT books with title containing 'Harry' using LIKE
SELECT title FROM Books WHERE title LIKE '%Harry%';
/*
+----------------+
| title          |
+----------------+
| Harry Potter   |
+----------------+
*/

-- 6. SELECT books with title starting with 'A'
SELECT title FROM Books WHERE title LIKE 'A%';
/*
+--------------+
| title        |
+--------------+
| Animal Farm  |
+--------------+
*/

-- 7. SELECT users with NULL email
SELECT * FROM Users WHERE email IS NULL;
/*
+---------+--------------+-------+-------------+
| user_id | name         | email | password    |
+---------+--------------+-------+-------------+
|   3     | Charlie Rose | NULL  | charliepass |
+---------+--------------+-------+-------------+
*/

-- 8. SELECT books that are out of stock OR priced under 200
SELECT * FROM Books WHERE stock = 0 OR price < 200;
/*
+---------+--------------+--------+-------+-----------+
| book_id | title        | price  | stock | author_id |
+---------+--------------+--------+-------+-----------+
|    2    | Animal Farm  | 199.50 |  15   |     1     |
|    4    | Mystery Book | 150.00 |   5   |     3     |
+---------+--------------+--------+-------+-----------+
*/

-- 9. SELECT books with author_id IN (1, 2)
SELECT * FROM Books WHERE author_id IN (1, 2);
/*
Returns all books written by George Orwell and J.K. Rowling
*/

-- 10. SELECT orders placed by user_id = 1
SELECT * FROM Orders WHERE user_id = 1;
/*
+----------+---------+---------------------+----------+
| order_id | user_id | order_date          | status   |
+----------+---------+---------------------+----------+
|    1     |    1    | 2025-06-21 10:32:00 | Pending  |
+----------+---------+---------------------+----------+
*/

-- 11. SELECT orders placed after '2024-01-01'
SELECT * FROM Orders WHERE order_date > '2024-01-01';
/*
All orders inserted in task 2 (2025) will be shown.
*/

-- 12. SELECT all authors sorted alphabetically (ascending)
SELECT * FROM Authors ORDER BY name ASC;
/*
+-----------+----------------+------------------------------+
| author_id | name           | bio                          |
+-----------+----------------+------------------------------+
|    3      | Anonymous      | NULL                         |
|    1      | George Orwell  | Author of 1984 and Animal... |
|    2      | J.K. Rowling   | Author of Harry Potter       |
+-----------+----------------+------------------------------+
*/

-- 13. SELECT all books sorted by price descending
SELECT title, price FROM Books ORDER BY price DESC;
/*
+--------------+--------+
| title        | price  |
+--------------+--------+
| Harry Potter | 499.00 |
| 1984         | 299.99 |
| Copy of 1984 | 299.99 |
| Animal Farm  | 199.50 |
| Mystery Book | 150.00 |
+--------------+--------+
*/

-- 14. SELECT top 3 most expensive books
SELECT title, price FROM Books ORDER BY price DESC LIMIT 3;
/*
+--------------+--------+
| title        | price  |
+--------------+--------+
| Harry Potter | 499.00 |
| 1984         | 299.99 |
| Copy of 1984 | 299.99 |
+--------------+--------+
*/

-- 15. SELECT DISTINCT order statuses
SELECT DISTINCT status FROM Orders;
/*
+----------+
| status   |
+----------+
| Pending  |
| Shipped  |
+----------+
*/

-- 16. SELECT books with aliasing (title as book_title)
SELECT title AS book_title, price FROM Books;
/*
+--------------+--------+
| book_title   | price  |
+--------------+--------+
| 1984         | 299.99 |
| Animal Farm  | 199.50 |
| Harry Potter | 499.00 |
| Mystery Book | 150.00 |
| Copy of 1984 | 299.99 |
+--------------+--------+
*/

-- 17. SELECT users whose names start with 'A' and have email
SELECT * FROM Users WHERE name LIKE 'A%' AND email IS NOT NULL;
/*
+---------+--------------+-------------------+----------+
| user_id | name         | email             | password |
+---------+--------------+-------------------+----------+
|   1     | Alice Johnson| alice@example.com | pass123  |
+---------+--------------+-------------------+----------+
*/

-- 18. SELECT books where stock is NOT NULL
SELECT title, stock FROM Books WHERE stock IS NOT NULL;
/*
All books listed here unless any stock was explicitly set to NULL.
*/

-- 19. SELECT payments made via Credit Card
SELECT * FROM Payments WHERE method = 'Credit Card';
/*
+------------+----------+--------+---------------------+-------------+
| payment_id | order_id | amount | payment_date        | method      |
+------------+----------+--------+---------------------+-------------+
|     1      |    1     | 499.49 | 2025-06-21 11:00:00 | Credit Card |
+------------+----------+--------+---------------------+-------------+
*/

-- 20. SELECT users ordered by newest registration
SELECT * FROM Users ORDER BY created_at DESC;
/*
Newest registered users shown first based on created_at timestamp.
*/
